<?xml version="1.0" encoding="UTF-8"?>
<!-- was: <?xml version="1.0" encoding="US-ASCII"?> -->
<!-- This template is for creating an Internet Draft using xml2rfc,
which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
There has to be one entity for each item to be referenced.
An alternate method (rfc include) is described in the references. -->
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
(Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
(using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-dr-dprive-profiles-for-tls-and-dtls-01" ipr="trust200902">
    <!-- category values: std, bcp, info, exp, and historic
  ipr values: full3667, noModification3667, noDerivatives3667
  you can add the attributes updates="NNNN" and obsoletes="NNNN"
  they will automatically be output with "(if approved)" -->
    <!-- ***** FRONT MATTER ***** -->
    <front>
        <!-- The abbreviated title is used in the page header - it is only necessary if the
    full title is longer than 39 characters -->
        <title abbrev="(D)TLS Authentication">Authentication and (D)TLS Profiles forDNS-over-TLS and DNS-over-DTLS</title>
        <!-- add 'role="editor"' below for the editors if appropriate -->
        <!-- Another author who claims to be an editor -->
        <author fullname="Sara Dickinson" initials="S." surname="Dickinson">
            <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
            <address>
                <postal>
                    <street>Magdalen Centre</street>
                    <street>Oxford Science Park</street>
                    <city>Oxford</city>
                    <region/>
                    <code>OX4 4GA</code>
                    <country>UK</country>
                </postal>
                <email>sara@sinodun.com</email>
                <uri>http://sinodun.com</uri>
            </address>
        </author>
        <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
            <organization abbrev="Cisco">Cisco Systems, Inc.</organization>
            <address>
                <postal>
                    <street>Cessna Business Park, Varthur Hobli</street>
                    <street>Sarjapur Marathalli Outer Ring Road</street>
                    <city>Bangalore</city>
                    <region>Karnataka</region>
                    <code>560103</code>
                    <country>India</country>
                </postal>
                <email>tireddy@cisco.com</email>
            </address>
        </author>

        <date month="Nov" year="2015"/>
        <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
          in the current day for you. If only the current year is specified, xml2rfc will fill
        in the current day and month for you. If the year is not the current one, it is
        necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
        purpose of calculating the expiry date).  With drafts it is normally sufficient to
        specify just the year. -->
        <!-- Meta-data Declarations -->
        <area>int</area>
        <workgroup>dprive</workgroup>
        <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.
        If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->
        <keyword>DNS</keyword>
        <keyword>transport</keyword>
        <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->
        <abstract>
          <t>
            This document describes how a DNS client can use a domain
            name to authenticate a recursive DNS resolver that uses
            Transport Layer Security (TLS) and Datagram TLS
            (DTLS). Additionally, it defines (D)TLS profiles for DNS
            clients and servers implementing DNS-over-TLS and
            DNS-over-DTLS.
          </t>
        </abstract>
    </front>
    <middle>
      <section title="Introduction">
            <t>To address the concerns in <xref target="RFC7626"/> the DPRIVE working group has 
               two active documents that provide DNS
               privacy between DNS stubs and recursive resolvers:
               <list style="symbols"> 
                   <t><xref target="I-D.ietf-dprive-dns-over-tls">DNS-over-TLS</xref> </t>
                   <t><xref target="I-D.ietf-dprive-dnsodtls">DNS-over-DTLS</xref></t>
                </list>
            </t>

            <t>
              This document defines authentication profiles for <xref
              target="RFC6347">DTLS</xref> and <xref
              target="RFC5246">TLS</xref> that specify how a DNS stub
              client or forwarder should authenticate the DNS
              recursive resolver it talks to, based on a domain name
              associated with that resolver.  In particular, it
              describes:
              <list style="symbols">
                <t>
                  How a DNS client can obtain a domain name for the
                  DNS server it talks to.
                </t>
                <t>
                  What sorts of credentials a DNS server can present
                  to prove its control over a given domain name.
                </t>
                <t>
                  How a DNS client can verify that any given
                  credential matchs the domain name for the server.
                </t>
              </list>
            </t>
            <t>
              This document also defines a (D)TLS protocol profile for
              use with DNS. This profile defines the configuration
              options and protocol extensions required of both parties
              to optimize connection establishment and resumption for
              transporting DNS, and to support the authentication
              profiles defined here.
            </t>

        </section>

        <section title="Terminology">
          <t>
            The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
            "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
            document are to be interpreted as described in <xref target="RFC2119"/>.
          </t>
          <t>
            We use several terms specifically in the context of this draft:
            <list style="symbols">
              <t>
                DNS Client: a DNS stub implementation or forwarding
                resolver.  A DNS Client receives requests from an
                application or a system and forwards them to some
                pre-configured set of upstream DNS Resolvers.  In the
                case of a forwarding resolver, we use the term "DNS
                Client" to discuss its active or querying side here.
              </t>
              <t>
                DNS Resolver: a pre-configured upstream resolver that
                a DNS client talks to.  These are usually recursive
                resolvers, but may themselves also be forwarding
                resolvers.  In the case of a forwarding resolver, we
                use the term "DNS Resolver" to discuss its passive or
                responding side here.
              </t>
              <t>
                Reference Identifier: a Reference Identifier as
                described in <xref target="RFC6125"/>, constructed by
                the DNS client when connecting to the DNS server.
              </t>
              <t>
                Credential: Information presented by a DNS Resolver during
                TLS authentication which proves its identity.  Covered
                credentials include:
                <list style="symbols">
                  <t>X.509 certificate</t>
                  <t>DNSSEC chain to TLSA record</t>
                </list>
              </t>
              <t>
                SPKI Pinsets: <xref
                target="I-D.ietf-dprive-dns-over-tls"/> describes the
                use of cryptographic digests to "pin" public key
                information in a manner similar to <xref
                target="RFC7469">HPKP</xref>.  An SPKI pinset is a
                collection of these pins that constrains a DNS Resolver.
              </t>
              <t>
                (D)TLS: <xref target="RFC5246">Transport Layer
                Security</xref> and (possibly) <xref
                target="RFC6347">Datagram Transport Layer
                Security</xref>
              </t>
              <t>
                Privacy-protective DNS Server: A DNS Resolver that:
                <list style="symbols">
                  <t>
                    Accepts <xref
                    target="I-D.ietf-dprive-dns-over-tls">DNS-over-TLS</xref>
                    connections and MAY accept <xref
                    target="I-D.ietf-dprive-dnsodtls">DNS-over-DTLS</xref>
                    connections.
                  </t>
                  <t>
                    Can offer at least one of the credentials described
                    in <xref target="credentials"/>.
                  </t>
                  <t>
                    Offers the (D)TLS profile described in <xref
                    target="tls-profile"/>.
                  </t>
              </list>
            </t>
          </list>
          </t>
        </section>

        <section title="Scope">
          <t>
            This document is limited to strong, domain-name-based
            authentication of recursive resolvers by DNS clients
            (stubs and forwarders), and the TLS profiles needed to
            support this.  As such, the following things are out of
            scope:
            <list style="symbols">
              <t>
                Authentication of authoritative nameservers by
                recursive resolvers.
              </t>
              <t>
                Authentication of DNS clients by servers.
              </t>
              <t>
                DNS clients (stubs and resolvers) using TLS in an
                <xref target="RFC7435">"opportunistic" mode</xref>.
                These clients should be willing to accept failed
                authentication, which is strictly preferable to
                cleartext.  However, this document does briefly
                describe an extension to opportunistic connections in
                <xref target="opportunistic"/>.
              </t>
              <t>
                SPKI-pinset-based authentication.  This is defined in
                <xref target="I-D.ietf-dprive-dns-over-tls"/>.
                However, this document does describe how to combine
                the two mechanisms in <xref target="combined-auth"/>.
              </t>
              <t>
                Any server identifier other than domain names,
                including IP address, organizational name, country of
                origin, etc.
              </t>
            </list>
          </t>
        </section>
          

        <section title="Discussion">
          <section title="Background">
            <t>
              DNS privacy requires encrypting the query (and response)
              to protect against passive attacks. Such encryption
              typically provides integrity protection as a side-effect,
              which means on-path attackers cannot simply inject bogus
              DNS responses. However, to provide protection against
              active attackers pretending to be the server, the client
              must authenticate the server.
            </t>
          </section>
          <section title="Bootstrapping Problems">
            <t>
              Many TLS clients use <xref target="RFC6125">PKIX
              authentication</xref> based on a domain name for the
              server they are contacting.  These clients typically
              first look up the server's network address in the DNS
              before making this connection. A DNS client therefore
              has a bootstrap problem.
            </t>
            <t>
              As such, before connecting to its recursive resolver, a
              DNS client needs to learn both the resolver's IP address
              and its domain name.
            </t>
          </section>
          <section title="DNSSEC">
            <t>
              <xref target="dane"/> expects that the DNS Clients and
              understand DNSSEC, have a DNSSEC root key avaiable and
              well-maintained, and are capable of validating DNSEC
              chains.
            </t>
          </section>
          <section title="...">
            <t>[TODO: More discussion needed....]</t>
          </section>
        </section>

        <section title="Authentication in Opportunistic DNS (D)TLS Clients" anchor="opportunistic">
          <t>
            An <xref target="RFC7435">Opportunistic Security</xref>
            profile is described in <xref
            target="I-D.ietf-dprive-dns-over-tls"/> which MAY be used
            for both DNS-over-TLS and DNS-over-DTLS.
          </t>
          <t>
            DNS client implementations operating under this
            opportunistic profile which know of a domain name for
            their server MAY choose to try to authenticate the server
            using the mechanisms described here for debugging or
            diagnostic purposes if they have a means of reporting on
            the state of server authentication to their caller.
          </t>
          <t>
            DNS client implementations with multiple resolvers
            configured with any sort of automatic selection
            (e.g. failover) MUST NOT mix opportunistically-configured
            resolvers or non-(D)TLS resolvers with strictly-configured
            (D)TLS resolvers. Doing so would invalidate the
            protections offered against an active attacker.
          </t>
        </section>

        <section title="Authentication for Strong TLS Privacy">
          <t>
            To authenticate the server providing DNS privacy, the DNS
            client needs to know the domain name for each DNS privacy
            server it is willing to contact.  This is necessary to
            protect against active attacks on DNS privacy.
          </t>
          <t>
            A strict DNS client that wants strong guarantees of
            privacy MUST either use one of the sources listed in <xref
            target="identifier-sources"/> to obtain a domain name for
            the server it contacts, or use an SPKI pinset as described
            in <xref target="I-D.ietf-dprive-dns-over-tls"/>.
          </t>
          <t>
            The strict DNS Client MUST only consider connecting to DNS
            Rseolvers for which either a domain name or a SPKI pinset is
            known (or both). The client MUST use the available
            verification mechanisms described in <xref
            target="credentials"/> to authenticate the server, and
            MUST reject connections to a server when no verification
            mechanism succeeds.
          </t>
          <t>
            [ TODO: discuss situations where one name is sufficient
            for all IP addresses, or whether we want to mandate a
            strict one-to-one mapping of names to IP addresses ]
          </t>
          <t>
            A DNS privacy server may be temporarily unavailable when
            configuring a network.  For example, for clients on
            networks that require registration through web-based login
            (a.k.a. "captive portals"), such registration may rely on
            DNS interception and spoofing.  Techniques such as those
            used by DNSSEC-trigger [dnssec-trigger] MAY be used during
            network configuration, with the intent to transition to
            the designated strict DNS privacy servers after captive
            portal registration.  The user MUST be alerted that the
            DNS is not private during such bootstrap.
          </t>
        </section>


        <section title="Out of Band Sources of Reference Identifier" anchor="identifier-sources">
            <section title="Full direct configuration">
              <t>
                DNS clients may be directly and securely provisioned
                with the domain nae of each DNS privacy server.  For
                example, a configuration file, API, or graphical user
                interface may be provided.
              </t>
              <t>
                In this case, direct configuration for a DNS client
                would consist of both an IP address a domain name for
                each server.
              </t>
              <t>
                [ TODO: should we offer choice of port here as well as
                name and IP address? ]
              </t>
            </section>

            <section title="Direct configuration of name only">
              <t>
                [ TODO: do we want to keep this section? ]
              </t>
              <t>
                A DNS client may be configured directly with only the
                domain name of its DNS privacy server.
              </t>
              <t>
                It can then use opportunistic DNS connections to
                untrusted DNS Resolvers (e.g. provided by the local
                DHCP service) to establish the IP address of the
                intended privacy-preserving DNS Resolver by doing a
                lookup of SRV records.
              </t>
              <t>
                Example: For a DNS client configured in this way to do
                strict DNS privacy to dns.example.net, it would
                opportunistically look up the SRV for
                _domains._tcp.dns.example.net and determine addresses
                (via opportunistic A and/or AAAA lookups) for the
                resulting SRV response(s).
              </t>
              <t>
                A DNS client so configured that successfully connects
                to a configured DNS privacy server MAY choose to
                locally cache the looked up addresses in order to not
                have to repeat the opportunistic lookup.
              </t>
              <t>
                [ TODO: specify how long such caching is acceptable?
                Is this limited to the TTL or can we make an
                exception? ]
              </t>
            </section>
            
            <section title="DHCP">
              <t>
                Some clients may have an established trust
                relationship with a known <xref
                target="RFC2131">DHCP</xref> server for discovering
                their network confguraton.  In the typical case, such
                a DHCP server provides a list of IP addresses for DNS
                Resolvers (see section 3.8 of <xref
                target="RFC2132"/>), but does not provide a domain
                name for the nameserver itself.
              </t>
              <t>
                A DHCP server can use a DHCP extension to provide a
                list of domain names for the offered nameservers,
                which correspond to IP addresses listed.  [ TODO: do
                we want to define this DHCP extension now or to punt
                on it to a future document? ]
              </t>

              <t>
                Note that this requires the client to trust the DHCP
                server, and to have a secured/authenticated connection
                to it. Therefore this mechanism may be limited to only
                certain environments.  This document does not attempt
                to describe secured and trusted relationships to DHCP
                servers.
              </t>

                <t>[NOTE: We talked to the DHCP folks and they stated
                that they are working on securing IPv6, but that they
                don't expect IPv4 to be secured. ]</t>

            </section>
        </section>

        <section title="Credential Verification" anchor="credentials">
          <section title="X.509 Certificate Based Authentication" anchor="certs">
            <t>
              When a DNS client configured with a domain name connects
              to its configured DNS server over TLS or DTLS, the
              server may present it with an X.509 certificate.  The
              DNS client uses <xref target="RFC6125"/> validation
              techniques to compare the domain name to the certificate
              provided.
            </t>
            <t>
              A DNS client constructs two Reference Identifiers for
              the server based on the domain name: A DNS-ID and an
              <xref target="RFC4985">SRV-ID</xref>.  The DNS-ID is
              simply the domain name itself.  The SRV-ID uses a
              "_domains." prefix.  So if the configured domain name is
              "dns.example.com", then the two Reference Identifiers
              are:
              <list style="ordered">
                <t>
                  DNS-ID: dns.example.com
                </t>
                <t>
                  SRV-ID: _domains.dns.example.com
                </t>
              </list>
            </t>
            <t>
              If either of the Reference Identifiers are found in the
              X.509 certificate's subjectAltName extension as
              described in section 6 of <xref target="RFC6125"/>, the
              DNS client should accept the certificate for the server.
            </t>
            <t>
              [ TODO: do we want to talk about multiple domain names
              for a single server here? ]
            </t>
            <t>
              A compliant DNS Client MUST only inspect the
              certificate's subjectAltName extension for these
              Reference Identifiers.  In particular, it MUST NOT
              inspect the Subject field itself.
            </t>
          </section>
          
          <section title="DANE" anchor="dane">
            <t>
              <xref target="RFC6698">DANE</xref> provides mechanisms
              to root certificate and raw public keys trust with
              DNSSEC. However this requires a domain name which must
              be obtained via a trusted out of band source.
            </t>
            <t>
              [ TODO: what specific DANE record should be looked up?
              _853._tcp.dns.example.com for TLS?
              _853._udp.dns.example.com for DTLS? ]
            </t>
            <section title="Direct DNS Lookup">
              <t>
                The DNS client MAY choose to perform the DNS lookups
                to retrieve the required DANE records itself. The DNS
                queries for such DANE records MAY use opportunistic
                encryption or be in the clear to avoid trust
                recursion.
              </t>
            </section>
            <section title="TLS DNSSEC Chain extension">
              <t> 
                The DNS Client MAY offer the TLS extension described
                in <xref
                target="I-D.shore-tls-dnssec-chain-extension"/>.  If
                the DNS server supports this extension, it can provide
                the full chain to the client in the handshake.
              </t>
              <t>
                If the DNS Client offers the TLS DNSSEC Chain
                extension, it MUST be capable of validating the full
                chain down to the leaf.  If the supplied chain does
                not validate, the client MUST ignore the chain and
                validate only via the supplied certificate.
              </t>
              <t>
                [ TODO: specify guidance for parameters DANE to be
                used here.  For example, a suggestion to use
                Certificate Usage of 3 (EE-DANE) (section 2.1.1 of
                <xref target="RFC6698"/>) and a Selector of 1 (SPKI)
                (section 2.1.2) would completely remove all X.509 and
                certificate authorities from the verification path and
                allows for private certification ]
              </t>
              <t>
                [ TODO: discuss combination of DNSSEC Chain Extension
                with cert validation.  Note that the combination
                depends on the Certificate Usage value of the TLSA
                response. ]
              </t>
            </section>
          </section>
        </section>

        <section title="Combined Credentials with SPKI Pinsets" anchor="combined-auth">
          <t>
            A DNS Client connecting to a DNS Resolver that is
            configured with both a domain name and a SPKI pinset
            should require both a valid credential for the domain name
            and a valid SPKI pinset.
          </t>
          <t>
            [ TODO: describe in more detail why this conservative
            approach is the right one, and what implementations should
            do if they want a more lenient approach. ]
          </t>
        </section>
      
        <section title="Server capability probing and caching by DNS clients">
          <t>
            [DKG: not sure about this section -- this seems to be
            slipping away from strong authentication or profiling, so
            i think it is out of scope.]
          </t>
            
            <t>Deployment of both DNS-over-TLS and DNS-over-DTLS 
               will be gradual.  Not all servers will support one or both of these
               protocols and the
               well-known port might be blocked by some middleboxes. Clients will be
               expected to keep track of servers that support TLS and/or DTLS, and those that
               have been previously authenticated.</t>

           <t> If no server capability information is available then (unless otherwise specified 
               by the configuration of the
               DNS client) DNS clients that implement both TLS and DTLS SHOULD try to authenticate
               using both protocols
               before failing or falling back to a
               lower security. DNS clients using opportunistic security SHOULD try all available servers
               in order to obtain an authenticated encrypted connection
               before falling back to a lower security. (RATIONALE: This approach can increase latency while discovering
               server capabilities but maximizes the chance of sending the query over an authenticated
               encrypted connection.) </t>

               <t> [QUESTION: Should we make recommendations about what to do if a previously
               authenticated server starts failing authentication?]</t>
        </section>

        <section title="(D)TLS Protocol Profile" anchor="tls-profile">
            <t>This section defines the protocol profile of DNS-over-DTLS and
               DNS-over-TLS.</t>

               <t>There are known attacks on TLS, such as machine-in-the-middle and
               protocol downgrade.  These are general attacks on TLS and not
               specific to DNS-over-TLS; please refer to the TLS RFCs for
               discussion of these security issues.  Clients and servers MUST
               adhere to the TLS implementation recommendations and security
               considerations of <xref target="RFC7525"/> except with respect to TLS version.
               Since encryption of DNS using (D)TLS is virtually a green-field deployment 
               DNS clients and server MUST implement only (D)TLS 1.2 or later.</t>

               <t>Implementations compliant with this profile MUST implement all of
               the following items:</t>
                <t><list style="symbols">
                <t><xref target="RFC5077">TLS session resumption without server-side state</xref>
                    which eliminates the need for the server to retain cryptographic
                    state for longer than necessary.</t>
               <t><xref target="RFC7250">Raw public keys</xref>
                   which reduce the size of the ServerHello, and can be used by clients
                   that cannot obtain certificates (e.g., DNS resolvers on private networks). </t>
                </list></t>

                <t>Implementations compliant with this profile SHOULD implement all of
                   the following items:</t>
                <t><list style="symbols">
                <t><xref target="I-D.ietf-tls-falsestart">TLS False Start</xref>
                   which reduces round-trips by allowing the TLS second flight of 
                   messages (ChangeCipherSpec) to also contain the (encrypted) DNS query</t>
               
                <t><xref target="I-D.ietf-tls-cached-info">Cached Information Extension</xref>
                    which avoids transmitting the server's certificate and certificate 
                    chain if the client has cached that information from a previous TLS handshake</t>
                </list></t>

                <t>[NOTE: The references to (works in progress) should be upgraded to 
                    MUST's if those references become RFC's prior to publication of this document.]</t>

                <t>Guidance specific to TLS or DTLS is provided in either
                    <xref target="I-D.ietf-dprive-dnsodtls"/> or
                    <xref target="I-D.ietf-dprive-dns-over-tls"/>.</t>
        </section>

        <section anchor="IANA" title="IANA Considerations">
            <t>This memo includes no request to IANA.</t>
        </section>

        <section title="Security Considerations" anchor="security">
            <t></t>

        </section>

        <section anchor="Acknowledgements" title="Acknowledgements">
            <t></t>
        </section>
    </middle>

    <back>
        <references title="Normative References">
            <?rfc include="reference.RFC.6125"?>
            <?rfc include="reference.RFC.7525"?>
            <?rfc include="reference.RFC.5077"?>
            <?rfc include="reference.RFC.2119"?>
            <?rfc include="reference.RFC.6347"?>
            <?rfc include="reference.RFC.5246"?>
            <?rfc include="reference.RFC.4985"?>
            <?rfc include="reference.RFC.6698"?>
            <?rfc include="reference.RFC.7250"?>
        </references>
        <references title="Informative References">
            <?rfc include="reference.RFC.7469"?>
            <?rfc include="reference.RFC.7626"?>
            <?rfc include="reference.RFC.2131"?>
            <?rfc include="reference.RFC.2132"?>
            <?rfc include="reference.RFC.7435"?>
            <?rfc include="reference.I-D.ietf-tls-falsestart"?>
            <?rfc include="reference.I-D.ietf-tls-cached-info"?>
            <?rfc include="reference.I-D.ietf-dprive-dnsodtls"?>
            <?rfc include="reference.I-D.ietf-dprive-dns-over-tls"?>
            <?rfc include="reference.I-D.shore-tls-dnssec-chain-extension"?>

        </references>

        <section title="Changes between revisions">
            <t>[Note to RFC Editor: please remove this section prior to publication.]</t>
        </section>
    </back>
</rfc>
